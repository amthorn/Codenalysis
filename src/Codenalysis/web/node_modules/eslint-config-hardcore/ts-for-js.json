{
  "parser": "@typescript-eslint/parser",

  "plugins": [
    "@typescript-eslint",
    "sort-class-members",
    "decorator-position",
    "@shopify"
  ],

  "rules": {
    "default-param-last": "off",
    "@typescript-eslint/default-param-last": "error",

    "dot-notation": "off",
    "@typescript-eslint/dot-notation": "error",

    "lines-between-class-members": "off",
    "@typescript-eslint/lines-between-class-members": "error",

    "no-array-constructor": "off",
    "@typescript-eslint/no-array-constructor": "error",

    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": "error",

    "no-empty-function": "off",
    "@typescript-eslint/no-empty-function": "error",

    "no-invalid-this": "off",
    "@typescript-eslint/no-invalid-this": "error",

    "no-loss-of-precision": "off",
    "@typescript-eslint/no-loss-of-precision": "error",

    "no-magic-numbers": "off",
    "@typescript-eslint/no-magic-numbers": [
      "error",
      { "ignore": [0, 1], "enforceConst": true, "ignoreDefaultValues": true }
    ],

    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      { "enforceForJSX": true }
    ],

    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "caughtErrors": "all",
        "varsIgnorePattern": "^ignore$",
        "argsIgnorePattern": "^ignore$"
      }
    ],

    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "error",

    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",

    "quotes": "off",
    "@typescript-eslint/quotes": [
      "error",
      "double",
      { "avoidEscape": true, "allowTemplateLiterals": false }
    ],

    "require-await": "off",
    "@typescript-eslint/require-await": "error",

    "no-return-await": "off",
    "@typescript-eslint/return-await": ["error", "always"],

    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error", { "builtinGlobals": true }],

    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": "error",

    "no-loop-func": "off",
    "@typescript-eslint/no-loop-func": "error",

    "no-duplicate-imports": "off",
    "@typescript-eslint/no-duplicate-imports": "error",

    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/ban-tslint-comment": "error",
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-dynamic-delete": "error",
    "@typescript-eslint/no-extraneous-class": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-throw-literal": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/require-array-sort-compare": "error",
    "@typescript-eslint/unbound-method": "error",
    "@typescript-eslint/no-confusing-void-expression": "error",

    "@typescript-eslint/no-unnecessary-boolean-literal-compare": [
      "error",
      { "allowComparingNullableBooleansToTrue": false }
    ],

    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        "allowNumber": true,
        "allowBoolean": false,
        "allowAny": true,
        "allowNullish": false
      }
    ],

    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["strictCamelCase"]
      },
      {
        "selector": "typeLike",
        "format": ["StrictPascalCase"]
      },
      {
        "selector": ["variable", "parameter", "property", "accessor"],
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "has", "are", "can", "should", "did", "will"]
      }
    ],

    "sort-class-members/sort-class-members": [
      "error",
      {
        "groups": {
          "static-arrow-function-properties": {
            "static": true,
            "propertyType": "ArrowFunctionExpression"
          },
          "static-async-methods": {
            "static": true,
            "type": "method",
            "async": true
          },
          "static-accessor-pairs": { "static": true, "accessorPair": true },
          "static-getters": { "static": true, "kind": "get" },
          "static-setters": { "static": true, "kind": "set" },
          "static-conventional-private-properties": {
            "static": true,
            "type": "property",
            "name": "/_.+/"
          },
          "static-conventional-private-methods": {
            "static": true,
            "type": "method",
            "name": "/_.+/"
          },
          "static-async-conventional-private-methods": {
            "static": true,
            "type": "method",
            "name": "/_.+/",
            "async": true
          },
          "async-conventional-private-methods": {
            "type": "method",
            "name": "/_.+/",
            "async": true
          }
        },
        "order": [
          "[static-properties]",
          "[static-arrow-function-properties]",
          "[static-accessor-pairs]",
          "[static-getters]",
          "[static-setters]",
          "[static-methods]",
          "[static-async-methods]",
          "[properties]",
          "[arrow-function-properties]",
          "constructor",
          "[accessor-pairs]",
          "[getters]",
          "[setters]",
          "[methods]",
          "[async-methods]",
          "[static-conventional-private-properties]",
          "[static-conventional-private-methods]",
          "[static-async-conventional-private-methods]",
          "[conventional-private-properties]",
          "[conventional-private-methods]",
          "[async-conventional-private-methods]"
        ],
        "accessorPairPositioning": "getThenSet"
      }
    ],

    "decorator-position/decorator-position": "error",

    "@shopify/prefer-class-properties": "error",
    "@shopify/no-fully-static-classes": "error"
  }
}
